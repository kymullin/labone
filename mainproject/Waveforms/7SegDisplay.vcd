$date
	Fri Oct 20 11:29:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! sseg [7:0] $end
$var wire 4 " A [3:0] $end
$var reg 8 # decimalTemp [7:0] $end
$var reg 1 $ display $end
$var reg 1 % displayCLK $end
$scope module UUT $end
$var wire 8 & decimalTemp [7:0] $end
$var wire 1 $ display $end
$var wire 1 % displayCLK $end
$var wire 8 ' SSEG3 [7:0] $end
$var wire 8 ( SSEG2 [7:0] $end
$var wire 4 ) A [3:0] $end
$var reg 2 * ASEL [1:0] $end
$var reg 8 + SSEG0 [7:0] $end
$var reg 8 , SSEG1 [7:0] $end
$var reg 8 - sseg [7:0] $end
$scope module Digit2 $end
$var wire 4 . num [3:0] $end
$var reg 8 / SSEG [7:0] $end
$upscope $end
$scope module Digit3 $end
$var wire 4 0 num [3:0] $end
$var reg 8 1 SSEG [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11 1
b0 0
b10011111 /
b1 .
b1100011 -
b11111111 ,
b1100011 +
b0 *
b1111 )
b10011111 (
b11 '
b1 &
0%
0$
b1 #
b1111 "
b1100011 !
$end
#1
b11111111 !
b11111111 -
b1 *
1%
#2
0%
#3
b10011111 !
b10011111 -
b10 *
1%
#4
0%
#5
b11 !
b11 -
b11 *
1%
#6
0%
#7
b1100011 !
b1100011 -
b0 *
1%
#8
b1110 "
b1110 )
0%
1$
#9
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#10
0%
#11
b10011111 !
b10011111 -
b1011 "
b1011 )
b10 *
1%
#12
0%
#13
b11 !
b11 -
b111 "
b111 )
b11 *
1%
#14
0%
#15
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#16
b100101 '
b100101 1
b1101 (
b1101 /
b10 0
b11 .
0%
b100011 #
b100011 &
#17
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#18
0%
#19
b1101 !
b1101 -
b1011 "
b1011 )
b10 *
1%
#20
0%
#21
b100101 !
b100101 -
b111 "
b111 )
b11 *
1%
#22
0%
#23
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#24
b10011001 '
b10011001 1
b1001001 (
b1001001 /
b100 0
b101 .
0%
b1000101 #
b1000101 &
#25
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#26
0%
#27
b1001001 !
b1001001 -
b1011 "
b1011 )
b10 *
1%
#28
0%
#29
b10011001 !
b10011001 -
b111 "
b111 )
b11 *
1%
#30
0%
#31
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#32
b1000001 '
b1000001 1
b1110011 (
b1110011 /
b110 0
b111 .
0%
b1100111 #
b1100111 &
#33
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#34
0%
#35
b1110011 !
b1110011 -
b1011 "
b1011 )
b10 *
1%
#36
0%
#37
b1000001 !
b1000001 -
b111 "
b111 )
b11 *
1%
#38
0%
#39
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#40
b1 '
b1 1
b1001 (
b1001 /
b1000 0
b1001 .
0%
b10001001 #
b10001001 &
#41
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#42
0%
#43
b1001 !
b1001 -
b1011 "
b1011 )
b10 *
1%
#44
0%
#45
b1 !
b1 -
b111 "
b111 )
b11 *
1%
#46
0%
#47
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#48
b1111110 '
b1111110 1
b10111110 (
b10111110 /
b1010 0
b1011 .
0%
b10101011 #
b10101011 &
#49
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#50
0%
#51
b10111110 !
b10111110 -
b1011 "
b1011 )
b10 *
1%
#52
0%
#53
b1111110 !
b1111110 -
b111 "
b111 )
b11 *
1%
#54
0%
#55
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#56
b11011110 '
b11011110 1
b11101110 (
b11101110 /
b1100 0
b1101 .
0%
b11001101 #
b11001101 &
#57
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#58
0%
#59
b11101110 !
b11101110 -
b1011 "
b1011 )
b10 *
1%
#60
0%
#61
b11011110 !
b11011110 -
b111 "
b111 )
b11 *
1%
#62
0%
#63
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#64
b11110110 '
b11110110 1
b11111111 (
b11111111 /
b1110 0
b1111 .
0%
b11101111 #
b11101111 &
#65
b11111111 !
b11111111 -
b1101 "
b1101 )
b1 *
1%
#66
0%
#67
b1011 "
b1011 )
b10 *
1%
#68
0%
#69
b11110110 !
b11110110 -
b111 "
b111 )
b11 *
1%
#70
0%
#71
b1100011 !
b1100011 -
b1110 "
b1110 )
b0 *
1%
#72
b1111 "
b1111 )
0%
0$
#73
b11111111 !
b11111111 -
b1 *
1%
#74
0%
#75
b10 *
1%
#76
0%
#77
b11110110 !
b11110110 -
b11 *
1%
#78
0%
#79
b1100011 !
b1100011 -
b0 *
1%
#80
0%
